name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Clean and build API
        working-directory: ./api
        run: |
          rm -rf node_modules package-lock.json
          npm install --legacy-peer-deps || echo "Warnings during npm install"
          npm run build
      
      - name: Install and build front-end
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      - name: Run tests
        run: |
          cd api && npm test
          cd ../frontend && npm test

      # Étape pour installer Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.11.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # Étape pour arrêter les conteneurs existants, construire les images Docker et redémarrer les conteneurs
      - name: Build and push Docker images
        run: |
          docker-compose down
          docker-compose build
          docker-compose up -d

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Étape pour déployer l'application sur un VPS via SSH
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: "45.81.84.133"
          port: 9033
          username: "adminlocal"
          password: "cdadevops2024"
          # host: ${{ secrets.VPS_HOST }}
          # port: ${{ secrets.VPS_PORT }}
          # username: ${{ secrets.VPS_USER }}
          # password: ${{ secrets.VPS_SSH_KEY }}
          script: |
            DEPLOY_DIR=~/calories-tracker

            cd $DEPLOY_DIR
            sudo git pull origin develop || exit 11

            sudo docker-compose down -v || exit 20
            sudo docker-compose up -d || exit 30

    # steps:
    #   - name: Deploy to VPS
    #     if: github.ref == 'refs/heads/develop'
    #     env:
    #       VPS_USER: ${{ secrets.VPS_USER }}
    #       VPS_HOST: ${{ secrets.VPS_HOST }}
    #       VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
    #       VPS_SSH_PORT: ${{ secrets.VPS_PORT }}
    #     run: |
    #       echo "${{ secrets.VPS_SSH_KEY }}" | tr -d '\r' | ssh-add - > /dev/null
    #       ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p $VPS_SSH_PORT $VPS_USER@$VPS_HOST << 'EOF'
    #         cd /app
    #         git pull origin develop
    #         docker-compose down
    #         docker-compose up -d --build
    #       EOF
